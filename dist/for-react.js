import{a as F,b as M}from"./chunk-OQTBZDZC.js";import{a as b,b as S,c as y,d,e as C,f as R,g as k,h as v,i as f,j as _,k as E,l as V,m as h,n as w,o as p,p as T}from"./chunk-KJJLXRQF.js";import{createElement as m,useEffect as a,useMemo as g,useState as c}from"react";function B(e){let t=g(()=>p(e),[]);return a(()=>()=>t.dispose(),[t]),x(t)}function D(e){a(()=>{let t=T(()=>e());return()=>t.dispose()},[])}function x(e){let[t,n]=c(()=>e.get());return a(()=>{let u=e.subscribe(r=>{n(r)});return()=>u.dispose()},[e]),t}function G(...e){let[t,n]=c(()=>e.map(u=>u.get()));return a(()=>{let u=e.map((r,o)=>r.subscribe(s=>{n(l=>{let i=l.slice();return i[o]=s,i})}));return()=>{u.forEach(r=>r.dispose())}},e),t}function H(e){return function(n){let[u,r]=c({});return a(()=>{function o(){return f.run({id:"TC"+d(),_signalChanged(){r({})},_trackSignal(){},_untrackSignal(){},dispose(){}},()=>{e(n)}),()=>{}}let s=o();return()=>{s()}},[e,n]),m(e,n)}}export{E as Computed,V as Effect,_ as Signal,h as batch,p as computed,b as config,S as devTools,v as dispose,T as effect,H as experimental_withSignalTracking,R as isComputed,k as isEffect,C as isSignal,F as persistedSignal,w as signal,M as update,B as useComputed,D as useSignalEffect,x as useSignalValue,G as useSignalValues,y as withIdPrefix};
