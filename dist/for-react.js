import{a as F,b as W}from"./chunk-XPSOJZL5.js";import{a as b,b as S,c as y,d as f,e as R,f as k,g as C,h as V,i as p,j as _,k as v,l as E,m as h,n as w,o as l,p as d}from"./chunk-GFJTMIG6.js";import{createElement as g,useEffect as a,useRef as T,useState as c}from"react";function D(e){let t=T(l(e,!0));return a(()=>()=>t.current.dispose(),[t.current]),x(t.current)}function G(e){a(()=>{let t=d(()=>e());return()=>t.dispose()},[])}function x(e){let[t,u]=c(()=>e.peek()),n=T();return n.current||(n.current=e.subscribe(r=>{console.log("useSignalValue",r),u(r)})),a(()=>()=>n.current?.dispose(),[e]),t}function H(...e){let[t,u]=c(()=>e.map(n=>n.peek()));return a(()=>{let n=e.map((r,o)=>r.subscribe(s=>{u(m=>{let i=m.slice();return i[o]=s,i})}));return()=>{n.forEach(r=>r.dispose())}},e),t}function I(e){return function(u){let[n,r]=c({});return a(()=>{function o(){return p.run({id:"TC"+f(),_signalChanged(){r({})},_trackSignal(){},_untrackSignal(){},dispose(){}},()=>{e(u)}),()=>{}}let s=o();return()=>{s()}},[e,u]),g(e,u)}}export{v as Computed,E as Effect,_ as Signal,h as batch,l as computed,b as config,S as devTools,V as dispose,d as effect,I as experimental_withSignalTracking,k as isComputed,C as isEffect,R as isSignal,F as persistedSignal,w as signal,W as update,D as useComputed,G as useSignalEffect,x as useSignalValue,H as useSignalValues,y as withIdPrefix};
