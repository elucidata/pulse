import{a as F,b as M}from"./chunk-OQTBZDZC.js";import{a as b,b as S,c as k,d,e as C,f as v,g as y,h as R,i as f,j as E,k as V,l as _,m as h,n as w,o as p,p as T}from"./chunk-KJJLXRQF.js";import{createElement as m,useEffect as o,useMemo as x,useState as c}from"react";function A(e){let t=x(()=>p(e),[]);return o(()=>()=>t.dispose(),[t]),g(t)}function B(e){o(()=>{let t=T(()=>e());return()=>t.dispose()},[])}function g(e){let[t,n]=c(()=>e.peek());return o(()=>{let u=e.subscribe(r=>{n(r)});return()=>u.dispose()},[e]),t}function D(...e){let[t,n]=c(()=>e.map(u=>u.peek()));return o(()=>{let u=e.map((r,a)=>r.subscribe(s=>{n(l=>{let i=l.slice();return i[a]=s,i})}));return()=>{u.forEach(r=>r.dispose())}},e),t}function G(e){return function(n){let[u,r]=c({});return o(()=>{function a(){return f.run({id:"TC"+d(),_signalChanged(){r({})},_trackSignal(){},_untrackSignal(){},dispose(){}},()=>{e(n)}),()=>{}}let s=a();return()=>{s()}},[e,n]),m(e,n)}}export{V as Computed,_ as Effect,E as Signal,h as batch,p as computed,b as config,S as devTools,R as dispose,T as effect,v as isComputed,y as isEffect,C as isSignal,F as persistedSignal,w as signal,M as update,A as useComputed,B as useSignalEffect,g as useSignalValue,D as useSignalValues,k as withIdPrefix,G as withSignalTracking};
